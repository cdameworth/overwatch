
services:
  # MongoDB Database
  overwatch-db:
    image: mongo:7.0
    container_name: overwatch-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: overwatch
      MONGO_INITDB_ROOT_PASSWORD: overwatchpass123
      MONGO_INITDB_DATABASE: overwatch
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./tools/migration/database/init:/docker-entrypoint-initdb.d
    networks:
      - appnet
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/overwatch --quiet
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Database API Service
  database-api:
    build:
      context: .
      dockerfile: ./apps/database-api/Dockerfile
    container_name: overwatch-database-api
    restart: unless-stopped
    ports:
      - "5001:5001"
    environment:
      - NODE_ENV=production
      - PORT=5001
      - MONGODB_URI=mongodb://overwatch:overwatchpass123@overwatch-db:27017/overwatch?authSource=admin
      - JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
      - VALID_API_KEYS=cmdb-api-key-123,servicenow-key-456,internal-automation-789
      - ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5000,http://localhost:4000
    depends_on:
      overwatch-db:
        condition: service_healthy
    networks:
      - appnet

  # Main Backend Application
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    working_dir: /app
    volumes:
      - ./apps/backend:/app/apps/backend
      - ./package.json:/app/package.json
      - ./package-lock.json:/app/package-lock.json
    command: sh -c "npm install && npm run server"
    ports:
      - "4001:4000"
    environment:
      - NODE_ENV=development
      - SESSION_SECRET=development_session_secret
      - JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
      - SERVER_PORT=4000
      - DATABASE_API_URL=http://database-api:5001
      # GitHub credentials are optional - uncomment and set if needed
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
      - GITHUB_ACCESS_TOKEN=${GITHUB_ACCESS_TOKEN}
    depends_on:
      - frontend
      - database-api
    networks:
      - appnet

  # Frontend Application
  frontend:
    image: node:18
    working_dir: /app
    volumes:
      - ./apps/frontend:/app/apps/frontend
      - ./package.json:/app/package.json
      - ./package-lock.json:/app/package-lock.json
    command: sh -c "npm install -g live-server && live-server apps/frontend/src --port=3000 --host=0.0.0.0 --no-browser --cors"
    ports:
      - "5000:3000"
    environment:
      - NODE_ENV=development
    networks:
      - appnet

volumes:
  mongodb_data:
    driver: local

networks:
  appnet:
    driver: bridge 